#(¬©) @RknDeveloper ‚ú®


from pyrogram.types import Message, InlineKeyboardButton, InlineKeyboardMarkup, CallbackQuery
from pyrogram import filters, Client, enums, errors
from pyrogram.errors import UserNotParticipant
from RknDeveloper.untils.database import add_user, add_group, already_db
from configs import rkn1
import random, asyncio
import os


gif = [
    'https://telegra.ph/file/a5a2bb456bf3eecdbbb99.mp4',
    'https://telegra.ph/file/03c6e49bea9ce6c908b87.mp4',
    'https://telegra.ph/file/9ebf412f09cd7d2ceaaef.mp4',
    'https://telegra.ph/file/293cc10710e57530404f8.mp4',
    'https://telegra.ph/file/506898de518534ff68ba0.mp4',
    'https://telegra.ph/file/dae0156e5f48573f016da.mp4',
    'https://telegra.ph/file/3e2871e714f435d173b9e.mp4',
    'https://telegra.ph/file/714982b9fedfa3b4d8d2b.mp4',
    'https://telegra.ph/file/876edfcec678b64eac480.mp4',
    'https://telegra.ph/file/6b1ab5aec5fa81cf40005.mp4',
    'https://telegra.ph/file/b4834b434888de522fa49.mp4'
]


# Main Process _ _ _ _ _ Users Send Massage ü•Ä__ü•Ä Please üò¢ Give Credit

@Client.on_chat_join_request(filters.group | filters.channel & ~filters.private)
async def approve(bot, m : Message):
    op = m.chat
    kk = m.from_user
    try:
        add_group(m.chat.id)
        await bot.send_message(
            rkn1.LOG_CHANNEL,
            f"**--#N·¥á·¥°G Ä·¥è·¥ú·¥ò @RknDeveloper--**\n\nC ú·¥Ä…¥…¥·¥á ü & G Ä·¥è·¥ú·¥ò I·¥Ö: {m.chat.id}\nT…™·¥õ ü·¥á: `{m.chat.title}`\nU…¥: @{m.chat.username}\n\nB è: {m.from_user.mention}"
        )
        await bot.approve_chat_join_request(op.id, kk.id)
        img = random.choice(gif)
        await bot.send_video(kk.id,img, "**Hello {}!\nWelcome To {}\n\n__P·¥è·¥°·¥á Ä·¥Ö B è : @RknDeveloper__**".format(m.from_user.mention, m.chat.title), reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton("‚úõ A·¥Ö·¥Ö M·¥á T·¥è Y·¥è·¥ú Ä C ú·¥Ä…¥…¥·¥á ü ‡øá", url="https://t.me/Rkn_AutoRequestApprovebot?startchannel=Bots4Sale&admin=invite_users+manage_chat")],[
                InlineKeyboardButton("‚úõ A·¥Ö·¥Ö M·¥á T·¥è Y·¥è·¥ú Ä G Ä·¥è·¥ú·¥ò ‡øá", url="https://t.me/Rkn_AutoRequestApprovebot?startgroup=Bots4Sale&admin=invite_users+manage_chat")
                
            ]])            )
        await bot.send_message(
            rkn1.LOG_CHANNEL,
            f"**--N·¥á·¥° UÍú±·¥á Ä S·¥õ·¥Ä Ä·¥õ·¥á·¥Ö T ú·¥á B·¥è·¥õ--**\n\nUÍú±·¥á Ä: {m.from_user.mention}\nI·¥Ö: `{m.from_user.id}`\nU…¥: @{m.from_user.username}"
            )
    except errors.PeerIdInvalid as e:
        print("user isn't start bot(means group)")
    except Exception as err:
        print(str(err))    

# Start Massage _____ # Please üò¢ Give Credit 

@Client.on_message(filters.command("start"))
async def op(bot, m :Message):
    try:
        await bot.get_chat_member(rkn1.UPDATECHANNEL_ID, m.from_user.id) 
        if m.chat.type == enums.ChatType.PRIVATE:
            keyboard = InlineKeyboardMarkup([[
                #‚ö†Ô∏è don't change source code & source link ‚ö†Ô∏è #
                InlineKeyboardButton("‚îÄ„Ç∑ÔΩ°A ô·¥è·¥ú·¥õÔΩ°„Ç∑‚îÄ", callback_data = "about")
                    ],[
                InlineKeyboardButton("ñ£ò U·¥ò·¥Ö·¥Ä·¥õ·¥á C ú·¥Ä…¥…¥·¥á ü", url="https://t.me/RknDeveloper"),
                InlineKeyboardButton("‚öò S·¥ú·¥ò·¥ò·¥è Ä·¥õ ‚öò", url="https://t.me/RknDeveloperSupport")
                ],[
                InlineKeyboardButton("‚úõ A·¥Ö·¥Ö M·¥á T·¥è Y·¥è·¥ú Ä C ú·¥Ä…¥…¥·¥á ü ‡øá", url="https://t.me/Rkn_AutoRequestApprovebot?startchannel=Bots4Sale&admin=invite_users+manage_chat")],[
                InlineKeyboardButton("‚úõ A·¥Ö·¥Ö M·¥á T·¥è Y·¥è·¥ú Ä G Ä·¥è·¥ú·¥ò ‡øá", url="https://t.me/Rkn_AutoRequestApprovebot?startgroup=Bots4Sale&admin=invite_users+manage_chat")
                
            ]])            
            if not await already_db(m.from_user.id):
                await add_user(m.from_user.id)
                await bot.send_message(
                rkn1.LOG_CHANNEL,
                f"**--N·¥á·¥° UÍú±·¥á Ä S·¥õ·¥Ä Ä·¥õ·¥á·¥Ö T ú·¥á B·¥è·¥õ--**\n\nUÍú±·¥á Ä: {m.from_user.mention}\nI·¥Ö: `{m.from_user.id}`\nU…¥: @{m.from_user.username}"
                )
            await m.reply_photo(photo=rkn1.RKN_PIC, caption="**ü¶ä H·¥á ü ü·¥è {}!\n\nI'·¥ç A…¥ A·¥ú·¥õ·¥è A·¥ò·¥ò Ä·¥è·¥†·¥á [A·¥Ö·¥ç…™…¥ J·¥è…™…¥ R·¥á«´·¥ú·¥ás·¥õs]({}) B·¥è·¥õ.\nI C·¥Ä…¥ A·¥ò·¥ò Ä·¥è·¥†·¥á Us·¥á Äs I…¥ C ú·¥Ä…¥…¥·¥á üs & G Ä·¥è·¥ú·¥òs.A·¥Ö·¥Ö M·¥á T·¥è Y·¥è·¥ú Ä C ú·¥Ä…¥…¥·¥á ü A…¥·¥Ö G Ä·¥è·¥ú·¥ò ·¥Ä…¥·¥Ö P Ä·¥è·¥ç·¥è·¥õ·¥á M·¥á T·¥è A·¥Ö·¥ç…™…¥ W…™·¥õ ú A·¥Ö·¥Ö M·¥á·¥ç ô·¥á Äs P·¥á Ä·¥ç…™ss…™·¥è…¥.\n\n__P·¥è·¥°·¥á Ä·¥Ö B è : @RknDeveloper__**".format(m.from_user.mention, "https://t.me/telegram/153"), reply_markup=keyboard)
            
        elif m.chat.type == enums.ChatType.GROUP or enums.ChatType.SUPERGROUP:
            keyboar = InlineKeyboardMarkup(
                [
                    [
                        InlineKeyboardButton("P Ä…™·¥†·¥Ä·¥õ·¥á", url="https://t.me/Rkn_AutoRequestApprovebot?start=start")
                    ]
                ]
            )
            add_group(m.chat.id)
            await bot.send_message(
            rkn1.LOG_CHANNEL,
            f"**--#N·¥á·¥°G Ä·¥è·¥ú·¥ò @RknDeveloper--**\n\nC ú·¥Ä…¥…¥·¥á ü & G Ä·¥è·¥ú·¥ò I·¥Ö: {m.chat.id}\nT…™·¥õ ü·¥á: `{m.chat.title}`\nU…¥: @{m.chat.username}\n\nB è: {m.from_user.mention}"
            )
            await m.reply_text("**‚ù£Ô∏è H·¥á ü ü·¥è {}!\n\nW Ä…™·¥õ·¥á M·¥á P Ä…™·¥†·¥Ä·¥õ·¥á F·¥è Ä M·¥è Ä·¥á D·¥á·¥õ·¥Ä…™ üs.**".format(m.from_user.first_name), reply_markup=keyboar)
        print(m.from_user.first_name +" Is started Your Bot!")

    except UserNotParticipant:
        key = InlineKeyboardMarkup(
            [
                [
                    InlineKeyboardButton("ü•Ä J·¥è…™…¥ U·¥ò·¥Ö·¥Ä·¥õ·¥á C ú·¥Ä…¥…¥·¥á ü ü•Ä", url=f"https://t.me/RknDeveloper")],[
                    InlineKeyboardButton("ñ§ç T Ä è A…¢·¥Ä…™…¥ ‡ºó", "rkn_developer")
                ]
            ]
        )
        await m.reply_text("**üíû P ü·¥á·¥Äs·¥á J·¥è…™…¥ M è U·¥ò·¥Ö·¥Ä·¥õ·¥ás C ú·¥Ä…¥…¥·¥á ü T·¥è Us·¥á T ú…™s B·¥è·¥õ!. I“ì Y·¥è·¥ú J·¥è…™…¥·¥á·¥Ö C ü…™·¥Ñ·¥ã T Ä è A…¢·¥Ä…™…¥ B·¥ú·¥õ·¥õ·¥è…¥ T·¥è C·¥è…¥“ì…™ Ä·¥ç. ü•Ä**".format(rkn1.UPDATE_CHANNEL), reply_markup=key)

